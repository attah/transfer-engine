<?xml version="1.0" encoding="UTF-8"?>
<tagfile>
    <compound kind="class">
        <name>ImageOperation</name>
        <filename>imageoperation.html</filename>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QString</type>
            <name>tempFilePath</name>
            <anchorfile>imageoperation.html</anchorfile>
            <anchor>tempFilePath</anchor>
            <arglist>(const QString &amp; sourceFile)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QString</type>
            <name>removeImageMetadata</name>
            <anchorfile>imageoperation.html</anchorfile>
            <anchor>removeImageMetadata</anchor>
            <arglist>(const QString &amp; sourceFile)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QString</type>
            <name>scaleImage</name>
            <anchorfile>imageoperation.html</anchorfile>
            <anchor>scaleImage</anchor>
            <arglist>(const QString &amp; sourceFile, qreal scaleFactor, const QString &amp; targetFile)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>CallbackInterface</name>
        <filename>callbackinterface.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>CallbackInterface</name>
            <anchorfile>callbackinterface.html</anchorfile>
            <anchor>CallbackInterface</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>CallbackInterface</name>
            <anchorfile>callbackinterface.html</anchorfile>
            <anchor>CallbackInterface-2</anchor>
            <arglist>(const QString &amp; server, const QString &amp; path, const QString &amp; interface, const QString &amp; cancelMethod, const QString &amp; restartMethod)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~CallbackInterface</name>
            <anchorfile>callbackinterface.html</anchorfile>
            <anchor>dtor.CallbackInterface</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>TransferEngineClient</name>
        <filename>transferengineclient.html</filename>
        <member kind="enum">
            <name>Status</name>
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TransferFinished">
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TransferCanceled">
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TransferInterrupted">
            <anchor>Status-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>TransferEngineClient</name>
            <anchorfile>transferengineclient.html</anchorfile>
            <anchor>TransferEngineClient</anchor>
            <arglist>(QObject * parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~TransferEngineClient</name>
            <anchorfile>transferengineclient.html</anchorfile>
            <anchor>dtor.TransferEngineClient</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>createDownloadEvent</name>
            <anchorfile>transferengineclient.html</anchorfile>
            <anchor>createDownloadEvent</anchor>
            <arglist>(const QString &amp; displayName, const QUrl &amp; applicationIcon, const QUrl &amp; serviceIcon, const QUrl &amp; url, const QString &amp; mimeType, qlonglong expectedFileSize, const CallbackInterface &amp; callback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>createSyncEvent</name>
            <anchorfile>transferengineclient.html</anchorfile>
            <anchor>createSyncEvent</anchor>
            <arglist>(const QString &amp; displayName, const QUrl &amp; applicationIcon, const QUrl &amp; serviceIcon, const CallbackInterface &amp; callback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>startTransfer</name>
            <anchorfile>transferengineclient.html</anchorfile>
            <anchor>startTransfer</anchor>
            <arglist>(int transferId)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>updateTransferProgress</name>
            <anchorfile>transferengineclient.html</anchorfile>
            <anchor>updateTransferProgress</anchor>
            <arglist>(int transferId, qreal progress)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>finishTransfer</name>
            <anchorfile>transferengineclient.html</anchorfile>
            <anchor>finishTransfer</anchor>
            <arglist>(int transferId, Status status, const QString &amp; reason)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>DbManager</name>
        <filename>dbmanager.html</filename>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>DbManager *</type>
            <name>instance</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>instance</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~DbManager</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>dtor.DbManager</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>createMetadataEntry</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>createMetadataEntry</anchor>
            <arglist>(int key, const QString &amp; title, const QString &amp; description)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QStringList</type>
            <name>callback</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>callback</anchor>
            <arglist>(int key) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>createCallbackEntry</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>createCallbackEntry</anchor>
            <arglist>(int key, const QString &amp; service, const QString &amp; path, const QString &amp; interface, const QString &amp; cancelMethod, const QString &amp; restartMethod)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>createTransferEntry</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>createTransferEntry</anchor>
            <arglist>(MediaItem * mediaItem)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>updateTransferStatus</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>updateTransferStatus</anchor>
            <arglist>(int key, TransferEngineData::TransferStatus status)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>updateProgress</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>updateProgress</anchor>
            <arglist>(int key, qreal progress)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>removeTransfer</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>removeTransfer</anchor>
            <arglist>(int key)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>clearTransfers</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>clearTransfers</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;TransferDBRecord&gt;</type>
            <name>transfers</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>transfers</anchor>
            <arglist>() const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>TransferEngineData::TransferType</type>
            <name>transferType</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>transferType</anchor>
            <arglist>(int key) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>TransferEngineData::TransferStatus</type>
            <name>transferStatus</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>transferStatus</anchor>
            <arglist>(int key) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>callbackMethods</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>callbackMethods</anchor>
            <arglist>(int key, QString &amp; cancelMethod, QString &amp; restartMethod) const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>MediaItem *</type>
            <name>mediaItem</name>
            <anchorfile>dbmanager.html</anchorfile>
            <anchor>mediaItem</anchor>
            <arglist>(int key) const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>TransferEngine</name>
        <filename>transferengine.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>TransferEngine</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>TransferEngine</anchor>
            <arglist>(QObject * parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~TransferEngine</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>dtor.TransferEngine</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>uploadMediaItem</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>uploadMediaItem</anchor>
            <arglist>(const QString &amp; source, const QString &amp; serviceId, const QString &amp; mimeType, bool metadataStripped, const QVariantMap &amp; userData)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>uploadMediaItemContent</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>uploadMediaItemContent</anchor>
            <arglist>(const QVariantMap &amp; content, const QString &amp; serviceId, const QVariantMap &amp; userData)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>createDownload</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>createDownload</anchor>
            <arglist>(const QString &amp; displayName, const QString &amp; applicationIcon, const QString &amp; serviceIcon, const QString &amp; filePath, const QString &amp; mimeType, qlonglong expectedFileSize, const QStringList &amp; callback, const QString &amp; cancelMethod, const QString &amp; restartMethod)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>createSync</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>createSync</anchor>
            <arglist>(const QString &amp; displayName, const QString &amp; applicationIcon, const QString &amp; serviceIcon, const QStringList &amp; callback, const QString &amp; cancelMethod, const QString &amp; restartMethod)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>startTransfer</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>startTransfer</anchor>
            <arglist>(int transferId)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>restartTransfer</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>restartTransfer</anchor>
            <arglist>(int transferId)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>finishTransfer</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>finishTransfer</anchor>
            <arglist>(int transferId, int status, const QString &amp; reason)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>updateTransferProgress</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>updateTransferProgress</anchor>
            <arglist>(int transferId, double progress)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;TransferDBRecord&gt;</type>
            <name>transfers</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>transfers</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;TransferMethodInfo&gt;</type>
            <name>transferMethods</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>transferMethods</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearTransfers</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>clearTransfers</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cancelTransfer</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>cancelTransfer</anchor>
            <arglist>(int transferId)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>enableNotifications</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>enableNotifications</anchor>
            <arglist>(bool enable)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>notificationsEnabled</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>notificationsEnabled</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>progressChanged</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>progressChanged</anchor>
            <arglist>(int transferId, double progress)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>statusChanged</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>statusChanged</anchor>
            <arglist>(int transferId, int status)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>transferMethodListChanged</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>transferMethodListChanged</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>transfersChanged</name>
            <anchorfile>transferengine.html</anchorfile>
            <anchor>transfersChanged</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>TransferMethodInfo</name>
        <filename>transfermethodinfo.html</filename>
        <member kind="enum">
            <name>TransferMethodInfoField</name>
            <anchor>TransferMethodInfoField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DisplayName">
            <anchor>TransferMethodInfoField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="UserName">
            <anchor>TransferMethodInfoField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MethodId">
            <anchor>TransferMethodInfoField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="AccountId">
            <anchor>TransferMethodInfoField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ShareUIPath">
            <anchor>TransferMethodInfoField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Capabilities">
            <anchor>TransferMethodInfoField-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>TransferMethodInfo</name>
            <anchorfile>transfermethodinfo.html</anchorfile>
            <anchor>TransferMethodInfo</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>TransferMethodInfo &amp;</type>
            <name>operator=</name>
            <anchorfile>transfermethodinfo.html</anchorfile>
            <anchor>operator=</anchor>
            <arglist>(const TransferMethodInfo &amp; other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>TransferMethodInfo</name>
            <anchorfile>transfermethodinfo.html</anchorfile>
            <anchor>TransferMethodInfo-2</anchor>
            <arglist>(const TransferMethodInfo &amp; other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~TransferMethodInfo</name>
            <anchorfile>transfermethodinfo.html</anchorfile>
            <anchor>dtor.TransferMethodInfo</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>void</type>
            <name>registerType</name>
            <anchorfile>transfermethodinfo.html</anchorfile>
            <anchor>registerType</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVariant</type>
            <name>value</name>
            <anchorfile>transfermethodinfo.html</anchorfile>
            <anchor>value</anchor>
            <arglist>(int index) const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>TransferPluginInterface</name>
        <filename>transferplugininterface.html</filename>
        <member kind="function" protection="public" virtual="pure" static="no">
            <type>virtual MediaTransferInterface *</type>
            <name>transferObject</name>
            <anchorfile>transferplugininterface.html</anchorfile>
            <anchor>transferObject</anchor>
            <arglist>() = 0</arglist>
        </member>
        <member kind="function" protection="public" virtual="pure" static="no">
            <type>virtual TransferPluginInfo *</type>
            <name>infoObject</name>
            <anchorfile>transferplugininterface.html</anchorfile>
            <anchor>infoObject</anchor>
            <arglist>() = 0</arglist>
        </member>
        <member kind="function" protection="public" virtual="pure" static="no">
            <type>virtual QString</type>
            <name>pluginId</name>
            <anchorfile>transferplugininterface.html</anchorfile>
            <anchor>pluginId</anchor>
            <arglist>() const = 0</arglist>
        </member>
        <member kind="function" protection="public" virtual="pure" static="no">
            <type>virtual bool</type>
            <name>enabled</name>
            <anchorfile>transferplugininterface.html</anchorfile>
            <anchor>enabled</anchor>
            <arglist>() const = 0</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>TransferDBRecord</name>
        <filename>transferdbrecord.html</filename>
        <member kind="enum">
            <name>TransferDBRecordField</name>
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TransferID">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="TransferType">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Progress">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="URL">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Status">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="PluginID">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="Timestamp">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="DisplayName">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ResourceName">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="MimeType">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="FileSize">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ServiceIcon">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ApplicationIcon">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="ThumbnailIcon">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="CancelSupported">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member name="RestartSupported">
            <anchor>TransferDBRecordField-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>TransferDBRecord</name>
            <anchorfile>transferdbrecord.html</anchorfile>
            <anchor>TransferDBRecord</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>TransferDBRecord &amp;</type>
            <name>operator=</name>
            <anchorfile>transferdbrecord.html</anchorfile>
            <anchor>operator=</anchor>
            <arglist>(const TransferDBRecord &amp; other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>TransferDBRecord</name>
            <anchorfile>transferdbrecord.html</anchorfile>
            <anchor>TransferDBRecord-2</anchor>
            <arglist>(const TransferDBRecord &amp; other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~TransferDBRecord</name>
            <anchorfile>transferdbrecord.html</anchorfile>
            <anchor>dtor.TransferDBRecord</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>void</type>
            <name>registerType</name>
            <anchorfile>transferdbrecord.html</anchorfile>
            <anchor>registerType</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVariant</type>
            <name>value</name>
            <anchorfile>transferdbrecord.html</anchorfile>
            <anchor>value</anchor>
            <arglist>(int index) const</arglist>
        </member>
    </compound>
</tagfile>
